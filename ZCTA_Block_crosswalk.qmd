---
title: "Crosswalk ZCTAs to Census blocks & tracts"
author: "Alan Jackson"
format: html
editor: source
---

##    Read in the 2020 census realtionship files

https://www.census.gov/geographies/reference-files/time-series/geo/relationship-files.2020.html


2020 Zip Code Tabulation Area (ZCTA5) to 2020 Census Tabblock Relationship File Layout (tab20_zcta520_tabblock20_natl.txt)

Relationship File Column Name 	Maximum Length 	Column Definition
OID_ZCTA5_20 	22 	OID of 2020 ZCTA5
GEOID_ZCTA5_20 	5 	GEOID of the 2020 ZCTA5
NAMELSAD_ZCTA5_20 	100 	Name with translated Legal/Statistical Area Description of 2020 ZCTA5
AREALAND_ZCTA5_20 	14 	Total land area of 2020 ZCTA5 in square meters
AREAWATER_ZCTA5_20 	14 	Total water area of 2020 ZCTA5 in square meters
MTFCC_ZCTA5_20 	5 	MAFTIGER feature class code of 2020 ZCTA5
CLASSFP_ZCTA5_20 	2 	FIPS class code of 2020 ZCTA5
FUNCSTAT_ZCTA5_20 	1 	Functional status of 2020 ZCTA5
OID_TABBLOCK_20 	22 	OID of 2020 tabulation block
GEOID_TABBLOCK_20 	15 	GEOID of the 2020 tabulation block
NAMELSAD_TABBLOCK_20 	100 	Name with translated Legal/Statistical Area Description of 2020 tabulation block
AREALAND_TABBLOCK_20 	14 	Land area of 2020 tabulation block in square meters
AREAWATER_TABBLOCK_20 	14 	Water area of 2020 tabulation block in square meters
MTFCC_TABBLOCK_20 	5 	MAFTIGER feature class code of 2020 tabulation block
CLASSFP_TABBLOCK_20 	2 	FIPS class code of 2020 tabulation block
FUNCSTAT_TABBLOCK_20 	1 	Functional status of 2020 tabulation block
AREALAND_PART 	14 	Calculated land area of the overlapping part in square meters
AREAWATER_PART 	14 	Calculated water area of the overlapping part in square meters

```{r}
#   Setup

library(tidyverse)
library(tidycensus)
library(tmap) 

path <- "/home/ajackson/Dropbox/Rprojects/Curated_Data_Files/Census_Crosswalks/"

googlecrs <- "EPSG:4326"

Tabblock <- read_delim(paste0(path, "tab20_zcta520_tabblock20_natl.txt"),
                       delim="|",
                       col_types="cccnnccccccnnccnn")

saveRDS(Tabblock, paste0(path, "Raw_ZCTA_to_TabBlock.rds"))

#   Cleanup and save

Tabblock <- Tabblock %>% 
  select(ZCTA=GEOID_ZCTA5_20, GEOID_TABBLOCK_20, 
         AREALAND_ZCTA5_20,
         AREALAND_TABBLOCK_20,
         AREALAND_PART) %>% 
  filter(!is.na(ZCTA)) %>% 
  mutate(Blk_grp = stringr::str_sub(GEOID_TABBLOCK_20, 1, 12)) %>% 
  mutate(Tract = stringr::str_sub(GEOID_TABBLOCK_20, 1, 11))

saveRDS(Tabblock, paste0(path, "ZCTA_to_TabBlock.rds"))

```

##        Start with tests to check understanding

Do I understand the relationship between census blocks and ZCTA's? Let's make
a map to compare them and see if it agrees with my understanding.

```{r}

vars <- load_variables(2020, "dhc", cache=TRUE)
vars2 <- load_variables(2020, "dp", cache=TRUE)

dhc_vars <- c(Pop_in_house="P15_001N",
              Householder="H10_001N",
              Renter="H10_010N",
              House_units="H1_001N",
              Urban_Rural="H2_001N",
              Urban_house="H2_002N",
              Pop_in_units="H8_001N",
              House_Fam="P16_002N",
              Pop_Total="P1_001N",
              Pop_Urban="P2_002N",
              Pop_Rural="P2_003N"
              )

dhc <- get_decennial(geography="block",
                     variables=dhc_vars,
                     sumfile="dhc",
                     year=2020,
                     state="TX",
                     county="201",
                     geometry=TRUE,
                     output="wide")

ZCTA_geom <- tidycensus::get_acs(geography = "zcta",
                variables =  "B01003_001", 
                progress_bar = FALSE,
                year = 2020, geometry=TRUE)

# foo <- dhc %>% 
#   mutate(dPop1=Pop_tot-Pop_Total,
#          dPop2=Pop_tot-Pop_Totalb,
#          dHouse1=Householder-Household_size,
#          dHouse2=Householder-House_type
#          ) %>% 
#   select(GEOID, NAME, dPop1, dPop2, dHouse1, dHouse2)

```


##        Let's make a map

```{r}

tmap::tmap_options(basemaps="OpenStreetMap")
tmap_mode("view")

foo1 <- dhc %>% filter(stringr::str_detect(GEOID, "^4820151"))
foo2 <- ZCTA_geom %>% filter(stringr::str_detect(GEOID, "^7700"))


  tm_shape(foo1) +
  tm_polygons(alpha=0.5, popup.vars=c("GEOID", 
                                           "NAME",
                                           "Pop_Total",
                                           "House_units",
                                           "Renter")) +
  tm_shape(foo2) +
    tm_polygons(alpha=0, lwd=3, border.col="red") +
    tm_borders(col="red")


```







