---
title: "Add New Pollen"
format: html
editor: visual
---

## Add new pollen data

```{r initialize}
#| echo: false

library(tidyverse)
library(lubridate)
library(readxl) # read excel files

savepath <- "/home/ajackson/Dropbox/Rprojects/Curated_Data_Files/PollenAndMold/"
path <- "https://www.houstontx.gov/health/Pollen-Mold/Pollen_Archives/"

df_old <-  readRDS(paste0(savepath, "MasterPollenData.rds"))

start_year <- "2023"
start_month <- 3
#   end 2/2023

```

## Read in individual months to be cleaned and added

```{r read in files}

#   Create a list of URL's

url_list <- tribble(~url)
for (yr in as.character(start_year:year(today()))) {
  for (mon in sprintf("%02d", 1:12)) {
      #   skip months already covered
    if (yr==start_year & as.integer(mon)<start_month) {next}
    else {
    
      url <- paste0(yr, mon, "-pollen-count.xls")
      if (!RCurl::url.exists(paste0(path,url))) {
        url <- paste0(url, "x") # try xlsx file
      }
      if (!RCurl::url.exists(paste0(path,url))) {
        print(paste(url, "does not exist"))
        next
      }
      
      #   add to url_list
      url_list <- add_row(url_list, url=url)
    }
  }
}

####################################
# now let's read in the files and save
####################################

#   First read the urls into local files

for (url in unlist(url_list[,1])){
  download.file(paste0(path, url), destfile=paste0(savepath, url), mode="wb")
}

for (url in url_list$url){
  print(url)
  fileout <- paste0(savepath, url, ".rds")
  df2 <- read_excel(paste0(savepath, url), col_names=FALSE)  
  saveRDS(df2, fileout)
}

```

## Functions

```{r functions}

clean = function(data) {

  # Recode column names
  #print(paste("DF", deparse(substitute(data)),sep="="))
  names.row = grep("DATE", data[, 1][[1]], ignore.case=TRUE)
  data[names.row, which(is.na(data[names.row,]))] <- 
    rep("NULL", sum(is.na(data[names.row,]))) # sometimes the variable is NA
  colnames(data)[1] <- "Date"
  recode_vals = translate$to %>% set_names(translate$from)
  old_names = unlist(data[names.row, ][-1]) 
  names(data) = c("Date", recode(old_names, !!!recode_vals))
  # data <- data %>% 
    # rename(any_of(recode_vec))
  
  # Get Month and Year for dates
  names.col = grep("Month:", data, ignore.case=TRUE)
  names.row = grep("Month:", data[, names.col, drop=TRUE], ignore.case=TRUE)
  mon  <- str_remove(data[names.row, names.col], "Month:\\s*|MONTH:\\s*")
  names.col = grep("Year:", data, ignore.case=TRUE)
  names.row = grep("Year", data[, names.col, drop=TRUE], ignore.case=TRUE)
  yr  <- str_remove(data[names.row, names.col], "YEAR:\\s*|Year:\\s*")

  # Remove Month, Year, Date, POLLEN, and Total rows
  data = data[!grepl("Month|YEAR|DATE|Total|POLLEN", data$Date, ignore.case=TRUE), ]
  data = data[!is.na(data$Date),]
  
  # Remove Total columns
  
  data <- data %>% 
    select(-contains("Total"))
  
  # Change Date column to correct dates
  data$Date = paste(yr, mon, data$Date, sep="-")
  data$Date = lubridate::ymd(data$Date)
  data = data[!is.na(data$Date),] # for things like Feb 31
  
  print(data$Date[1])
  
  data
}

# Clean up plant names to be used for variable names
translate <- tribble(
  ~from,                        ~to,
"Ashe Juniper / Bald Cypress",  "Ashe_JuniperOrBald_Cypress", 
"Acer (Maple)",                 "Maple",
"Alnus (Alder)",                "Alnus",
"Betula (Birch)",               "Birch",
"Carya (Hickory/Pecan)",        "Hickory_Pecan",                 
"Celtis (Hackberry)",           "Hackberry",                      
"Corylus (Hazelnut)",           "Hazelnut",
"Cupressaceae (Cedar)",         "Cedar",
"Fraxinus (Ash)",               "Ash",
"Juglans (Walnut)",             "Walnut",
"Liquidambar (Sweet Gum)",      "Sweet_Gum",
"Morus (Mulberry)",             "Mulberry",
"Pinaceae (Pine)",              "Pine",
"Platanus (Sycamore)",          "Sycamore",
"Populus (Cottonwood)",         "Cotton_Wood",
"Quercus (Oak)",                "Oak",
"Salix (Willow)",               "Willow",
"Tilia (Linden)",               "Linden",
"Ulmus (Elm)",                  "Elm",
"Tree Total",                   "Tree_Total",
"Grass Total",                  "Grass_Total",
"Ambrosia (Ragweed)",           "Ragweed",
"Artemisia (Sage)",             "Sagebrush",
"Asteraceae (Aster)",           "Aster",
"Cyperaceae (Sedge)",           "Sedge",
"Plantago (Plantain)",          "Plantago",
"Rumex (Sheep Sorel)",          "Sorrel",
"Typha (Cattail)",              "Cattail",
"Urticaceae (Nettle)",          "Nettle",
"Chenopodiaceae/ Amaranthaceae (Amaranth)", "Amaranth",
"Black Gum",                    "Black_Gum", 
"Black Walnut",                 "Black_Walnut", 
"Cotton Wood",                  "Cotton_Wood",
"Glandular Mesquite",           "Glandular_Mesquite", 
"Osage Orange",                 "Osage_Orange", 
"Sweet Gum",                    "Sweet_Gum", 
"Gingko Biloba",                "Gingko_Biloba",  
"Burweed / Marshelder",         "BurweedOrMarshelder", 
"Dog Fennel",                   "Dog_Fennel", 
"Lamb's Quarters",              "Lambs_Quarters", 
"Partridge Pea",                "Partridge_Pea", 
"Plum Grannet",                 "Plum_Grannet", 
"WILLOW",                       "Willow", 
"plantago(plantain)",           "Plantago", 
"Plantago(Plantain)",           "Plantago", 
"Plantago(plantain)",           "Plantago", 
"PLANTAGO",                     "Plantago", 
"Walnut(juglans)",              "Walnut", 
"Other weed pollen",            "Other_Weed", 
"Other weed/unidentified",      "Other_Weed", 
"other weed pollen",            "Other_Weed", 
"other weed",                   "Other_Weed", 
"Other Weed",                   "Other_Weed", 
"OTHER WEED",                   "Other_Weed", 
"OTHER TREE",                   "Other_Tree", 
"Other Tree/Unidentified",      "Other_Tree", 
"other tree pollen",            "Other_Tree", 
"OTHER TREE POLLEN",            "Other_Tree", 
"Other tree pollen",            "Other_Tree", 
"Other Tree",                   "Other_Tree", 
"Wild Carrot",                  "Wild_Carrot" 
)

recode_vec <- setNames(translate$from, translate$to)

```

## Cleanup data

```{r cleanup}


keep <- url_list

# Create an output filename column in url_list
url_list$filename <- NA
for (i in 1:nrow(url_list)) {
  print(paste("-1-", i))
  url <-  unlist(url_list[i,1])
  print(paste("-2-", url))
  y <- stringr::str_sub(url,1,4) # get year
  print(paste("-3-", y))
  m <- stringr::str_sub(url,5,6) # get month
  print(paste("-4-", m))
  url_list[i,]$filename <- paste0(tolower(month.name)[as.numeric(m)],
                                      "_",
                                      y)
}

# Read in df's from disk

for (i in 1:nrow(url_list)) {
  filename <- paste0(url_list[i,]$url, ".rds")
  df <- readRDS(paste0(savepath, filename))
  dataframe <- paste0("dframe_", url_list[i,]$filename)
  assign(dataframe, df)
}

#   Clean and consolidate
frames <- ls(pattern = "dframe")
df <- NULL
for (i in 1:length(frames)) {
  print(paste("===>", i, frames[i]))
  tmp <- clean(mget(frames[i])[[1]])
  df <- bind_rows(df, tmp)
}

#   get rid of weekends & holidays, and then delete the Tech columns

df <- df %>% filter(str_detect(Tech, regex("^W$", ignore_case = TRUE),
                               negate=TRUE) %>% replace_na(TRUE)) %>% 
             filter(str_detect(Tech, regex("^H$", ignore_case = TRUE),
                               negate=TRUE) %>% replace_na(TRUE)) %>% 
             # filter(str_detect(Tech., regex("weekend", ignore_case = TRUE),
             #                   negate=TRUE) %>% replace_na(TRUE)) %>% 
             # filter(str_detect(Tech., regex("holiday", ignore_case = TRUE),
             #                   negate=TRUE) %>% replace_na(TRUE)) %>% 
  # select(-Tech, -Tech.)
  select(-Tech)

df <- df %>% mutate_if(is.character,as.numeric)

#   quick QC

oak <- df %>% select(Date, Oak) %>% 
  arrange(Date) %>% 
  replace_na(list(Oak = 0)) %>% 
  mutate(Oak=ifelse(wday(Date)==1, NA, Oak),
         Oak=ifelse(wday(Date)==7, NA, Oak))


oak %>% 
  ggplot(aes(x=Date, y=Oak)) +
  geom_point() +
  geom_line()

```

## Temporary clean up old data file

```{r old cleanup}

df_old <- 
  df_old %>% 
  rowwise() %>% 
  mutate(Hickory=sum(Hickory, `Hickory/Pecan`, na.rm=TRUE)) %>% 
  mutate(Alnus=sum(Alnus, `Alnus(Alder)`, na.rm=TRUE)) %>% 
    ungroup() %>% 
  select(-`Alnus(Alder)`) %>% 
  select(-`Hickory/Pecan`)
  
#   Remove totals

df_old <- df_old %>% 
  select(-contains("Total"))

# get rid of columns that are all NA

df_old <- df_old[colSums(!is.na(df_old)) > 0]

```

## merge and save data

```{r save}

df <- bind_rows(df, df_old)

saveRDS(df, paste0(savepath, "MasterPollenData.rds"))

```

##        Attach low, med. heavy, extreme qualifiers and Tree or Grass or Weeds

```{r qualifiers}

# Classify as tree, weed, or grass
Classify <- tribble(
  ~name,                        ~class,
"Ashe_JuniperOrBald_Cypress", "Tree",
"Maple", "Tree",
"Alnus", "Tree",
"Birch", "Tree",
"Hickory_Pecan", "Tree",                
"Hackberry",    "Tree",                   
"Hazelnut", "Tree",
"Cedar", "Tree",
"Ash", "Tree",
"Walnut", "Tree",
"Sweet_Gum", "Tree",
"Mulberry", "Tree",
"Pine", "Tree",
"Sycamore", "Tree",
"Cotton_Wood", "Tree",
"Oak", "Tree",
"Willow", "Tree",
"Linden", "Tree",
"Elm", "Tree",
"Ragweed", "Weed",
"Sagebrush", "Weed",
"Aster", "Weed",
"Sedge", "Weed",
"Plantago", "Weed",
"Sorrel", "Weed",
"Cattail", "Weed",
"Nettle", "Weed",
"Amaranth", "Weed",
"Black_Gum",  "Tree",
"Black_Walnut",  "Tree",
"Glandular_Mesquite",  "Tree",
"Osage_Orange",  "Tree",
"Gingko_Biloba",   "Tree",
"BurweedOrMarshelder",  "Weed",
"Dog_Fennel",  "Weed",
"Lambs_Quarters",  "Weed",
"Partridge_Pea",  "Weed",
"Plum_Grannet",  "Weed",
"Other_Weed",  "Weed",
"Other_Tree",  "Tree",
"Wild_Carrot",  "Weed"
)


df <- df %>% 
  mutate(Qualifier = case_when(
    
  ))


```




